# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Dog_allOf

    DogAllOf(;
        bark=nothing,
        breed=nothing,
    )

    - bark::Bool
    - breed::String
"""
Base.@kwdef mutable struct DogAllOf <: OpenAPI.APIModel
    bark::Union{Nothing, Bool} = nothing
    breed::Union{Nothing, String} = nothing

    function DogAllOf(bark, breed, )
        OpenAPI.validate_property(DogAllOf, Symbol("bark"), bark)
        OpenAPI.validate_property(DogAllOf, Symbol("breed"), breed)
        return new(bark, breed, )
    end
end # type DogAllOf

const _property_types_DogAllOf = Dict{Symbol,String}(Symbol("bark")=>"Bool", Symbol("breed")=>"String", )
OpenAPI.property_type(::Type{ DogAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DogAllOf[name]))}

function check_required(o::DogAllOf)
    true
end

function OpenAPI.validate_property(::Type{ DogAllOf }, name::Symbol, val)
    if name === Symbol("breed")
        OpenAPI.validate_param(name, "DogAllOf", :enum, val, ["Dingo", "Husky", "Retriever", "Shepherd"])
    end
end
